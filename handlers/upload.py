from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters.state import State, StatesGroup
from loader import dp, bot
from config import ADMIN_USER_IDS

class UploadStates(StatesGroup):
    waiting_for_audio = State()
    waiting_for_name = State()
    waiting_for_artist = State()
    waiting_for_genre = State()

@dp.message_handler(commands=["upload"])
async def upload_start_handler(message: types.Message):
    await message.answer("–û—Ç–ø—Ä–∞–≤—å –∞—É–¥–∏–æ —Ñ–∞–π–ª –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –ø–µ—Å–Ω—é üéµ")
    await UploadStates.waiting_for_audio.set()

@dp.message_handler(content_types=[types.ContentType.AUDIO, types.ContentType.DOCUMENT], state=UploadStates.waiting_for_audio)
async def audio_received_handler(message: types.Message, state: FSMContext):
    file_id = message.audio.file_id if message.audio else message.document.file_id
    await state.update_data(audio=file_id)
    await message.answer("–í–≤–µ–¥–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø–µ—Å–Ω–∏:")
    await UploadStates.waiting_for_name.set()

@dp.message_handler(state=UploadStates.waiting_for_name)
async def name_handler(message: types.Message, state: FSMContext):
    await state.update_data(name=message.text)
    await message.answer("–ö—Ç–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å?")
    await UploadStates.waiting_for_artist.set()

@dp.message_handler(state=UploadStates.waiting_for_artist)
async def artist_handler(message: types.Message, state: FSMContext):
    await state.update_data(artist=message.text)
    await message.answer("–ö–∞–∫–æ–π –∂–∞–Ω—Ä?")
    await UploadStates.waiting_for_genre.set()

@dp.message_handler(state=UploadStates.waiting_for_genre)
async def genre_handler(message: types.Message, state: FSMContext):
    user_data = await state.get_data()
    user_data["genre"] = message.text

    text = (
        f"üé∂ *–ù–æ–≤–∞—è –ø–µ—Å–Ω—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {message.from_user.full_name}*\n\n"
        f"–ù–∞–∑–≤–∞–Ω–∏–µ: {user_data['name']}\n"
        f"–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {user_data['artist']}\n"
        f"–ñ–∞–Ω—Ä: {user_data['genre']}\n"
        f"ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {message.from_user.id}"
    )

    for admin_id in ADMIN_USER_IDS:
        await bot.send_message(admin_id, text, parse_mode="Markdown")
        if "audio" in user_data:
            await bot.send_audio(admin_id, user_data["audio"])

    await message.answer("‚úÖ –ü–µ—Å–Ω—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–µ.")
    await state.finish()
