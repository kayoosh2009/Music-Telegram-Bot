from aiogram import types
from aiogram.dispatcher import FSMContext
from keyboards import KB_LANG, KB_MENU_RU, KB_MENU_EN, KB_GENRES
from handlers.upload import upload_start_handler
from handlers.player import genre_selected_handler

async def start_handler(message: types.Message):
    await message.answer("üåê –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose language", reply_markup=KB_LANG)

async def language_choice_handler(message: types.Message, state: FSMContext):
    if message.text == "–†—É—Å—Å–∫–∏–π":
        await message.answer("–ß—Ç–æ –±—É–¥–µ–º —Å–ª—É—à–∞—Ç—å —Å–µ–≥–æ–¥–Ω—è?", reply_markup=KB_MENU_RU)
    elif message.text == "English":
        await message.answer("What do you want to listen today?", reply_markup=KB_MENU_EN)
    else:
        await message.answer("‚ùå –í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / Choose language")

async def menu_handler(message: types.Message):
    text = message.text.lower()
    if text in ["—Å–ª—É—à–∞—Ç—å –º—É–∑—ã–∫—É", "listen music"]:
        await message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä:", reply_markup=KB_GENRES)
    elif text in ["–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–≤–æ–π —Ç—Ä–µ–∫", "upload your track"]:
        await upload_start_handler(message)
    else:
        await message.answer("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.")
